# MIT License
# 
# Copyright (c) 2019 Thiago Alves
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
- name: Normalize action info
  set_fact:
    action: "{{ _action_defaults | combine(action_item, recursive=true) }}"
  vars:
    _action_defaults:
      name: ""
      source: ""
      destination: ""
      mode: ""
      vars:
        setup: ""
        file: ""
        extras: ""

########################################################################
# Copy action
- name: "Copy {{ tool.name }} files to {{ tool.install.path }}"
  copy:
    src: "{{ item }}"
    dest: "{{ tool.install.path }}/{{ action.destination }}"
    mode: "{{ action.mode }}"
    remote_src: yes
  with_fileglob:
    - "{{ _tool_temp_root.path }}/{{ action.source }}"
  when: action.name == "copy"

########################################################################
# Template actions
- name: "Create file from template"
  block:
    - name: "Create a normalized storage for {{ tool.name }} template values"
      set_fact:
        norm_vars: "{{ {} }}"

    - name: "Normalize variables for {{ tool.name }} templates"
      include_tasks: normalize-action-item.yaml
      loop: "{{ action.vars|dict2items }}"
      loop_control:
        loop_var: norm_item
        label: "{{ norm_item.key }}"

    - name: "Create plugin for {{ tool.name }} at {{ tool.install.path }}/{{ action.destination }}"
      template:
        src: template-extra.zsh.j2
        dest: "{{ tool.install.path }}/{{ action.destination }}"
      vars:
        template_setup: "{{ norm_vars.setup }}"
        template_file: "{{ norm_vars.file }}"
        template_extras: "{{ norm_vars.extras }}"
  when: action.name == "template"